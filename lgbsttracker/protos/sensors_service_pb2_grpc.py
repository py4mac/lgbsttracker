# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import light_sensor_pb2 as light__sensor__pb2


class SensorsServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getLightSensorById = channel.unary_unary(
        '/lgbsttracker.SensorsService/getLightSensorById',
        request_serializer=light__sensor__pb2.GetLightSensorById.SerializeToString,
        response_deserializer=light__sensor__pb2.GetLightSensorById.Response.FromString,
        )
    self.getLightSensors = channel.unary_unary(
        '/lgbsttracker.SensorsService/getLightSensors',
        request_serializer=light__sensor__pb2.GetLightSensors.SerializeToString,
        response_deserializer=light__sensor__pb2.GetLightSensors.Response.FromString,
        )
    self.createLightSensor = channel.unary_unary(
        '/lgbsttracker.SensorsService/createLightSensor',
        request_serializer=light__sensor__pb2.CreateLightSensor.SerializeToString,
        response_deserializer=light__sensor__pb2.CreateLightSensor.Response.FromString,
        )


class SensorsServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getLightSensorById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLightSensors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createLightSensor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SensorsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getLightSensorById': grpc.unary_unary_rpc_method_handler(
          servicer.getLightSensorById,
          request_deserializer=light__sensor__pb2.GetLightSensorById.FromString,
          response_serializer=light__sensor__pb2.GetLightSensorById.Response.SerializeToString,
      ),
      'getLightSensors': grpc.unary_unary_rpc_method_handler(
          servicer.getLightSensors,
          request_deserializer=light__sensor__pb2.GetLightSensors.FromString,
          response_serializer=light__sensor__pb2.GetLightSensors.Response.SerializeToString,
      ),
      'createLightSensor': grpc.unary_unary_rpc_method_handler(
          servicer.createLightSensor,
          request_deserializer=light__sensor__pb2.CreateLightSensor.FromString,
          response_serializer=light__sensor__pb2.CreateLightSensor.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'lgbsttracker.SensorsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
